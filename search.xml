<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RNA-seq分析流程</title>
      <link href="/2024/05/22/RNA-seq%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/05/22/RNA-seq%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>记录一下学习RNA-seq分析的过程，整体流程参考，可能会补充一些其他的资料：</p><style>refer .a {    color: white;    font-size: 8px;    text-decoration: none;}refer a:hover {    color: blue;}</style><p><refer><ul></p><li> <a href="https://zhuanlan.zhihu.com/p/518132262">RNA-seq入门实战（零）：RNA-seq流程前的准备——Linux与R的环境创建</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518134934">RNA-seq入门实战（一）：上游数据下载、格式转化和质控清洗</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518137593">RNA-seq入门实战（二）：上游数据的比对计数——Hisat2+ featureCounts 与 Salmon</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518140221">RNA-seq入门实战（三）：从featureCounts与Salmon输出文件获取counts矩阵</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518141288">RNA-seq入门实战（四）：差异分析前的准备——数据检查</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518142469">RNA-seq入门实战（五）：差异分析——DESeq2 edgeR limma的使用与比较</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518143539">RNA-seq入门实战（六）：GO、KEGG富集分析与enrichplot超全可视化攻略</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518144716">RNA-seq入门实战（七）：GSEA——基因集富集分析</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518145829">RNA-seq入门实战（八）：GSVA——基因集变异分析</a></li><li> <a href="https://zhuanlan.zhihu.com/p/532037554">RNA-seq入门实战（九）：PPI蛋白互作网络构建（上）——STRING数据库的使用</a></li><li> <a href="https://zhuanlan.zhihu.com/p/532038640">RNA-seq入门实战（十）：PPI蛋白互作网络构建（下）——Cytoscape软件的使用</a></li><li> <a href="https://zhuanlan.zhihu.com/p/532039670">RNA-seq入门实战（十一）：WGCNA加权基因共表达网络分析——关联基因模块与表型</a></li></ul></refer><h1 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h1><hr><h1 id="上游数据下载、获取和质控分析"><a href="#上游数据下载、获取和质控分析" class="headerlink" title="上游数据下载、获取和质控分析"></a>上游数据下载、获取和质控分析</h1><h2 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h2><p>Source：NCBI-&gt;GEO数据库-&gt;SRA Run Select  <br><br>Packge: Linux Sra-tools prefetch方法    <br><br>Output: SRA数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prefetch -O ./ $id &amp;</span><br></pre></td></tr></table></figure><details class="folding-tag" yellow><summary> 查看方法参数 </summary>              <div class='content'>              <ul><li>-O ： 下载目录</li><li>id : 下载数据SRA号，例：SRR12207280</li></ul>              </div>            </details><h2 id="SRA数据转fastq"><a href="#SRA数据转fastq" class="headerlink" title="SRA数据转fastq"></a>SRA数据转fastq</h2><p>Packge: Linux Sra-tools fasterq-dump&#x2F;fastq-dump<br><br>    fasterq-dump速度更快，但不支持<code>--gzip</code><br><br>Input: *.sra    <br><br>Output: .fastq &#x2F; .fastq.gz<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastq-dump --gzip --split-3 -O $&#123;outdirectory&#125; $&#123;SRRxxx&#125;.sra</span><br></pre></td></tr></table></figure><details class="folding-tag" yellow><summary> 查看方法参数 </summary>              <div class='content'>              <ul><li>–gzip: 输出gz格式压缩文件</li><li>–split-spot: 将双端测序分为两份,但是都放在同一个文件中</li><li>–split-files: 将双端测序分为两份,放在不同的文件,但是对于一方有而一方没有的reads直接丢弃</li><li>–split-3: 默认值，将双端测序分为两份,放在不同的文件,但是对于一方有而一方没有的reads会单独放在一个文件夹里</li></ul>              </div>            </details><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fasterq-dump  -p -e 24 --split-3 -O $&#123;outdirectory&#125; $&#123;SRRxxx&#125;.sra</span><br></pre></td></tr></table></figure><details class="folding-tag" yellow><summary> 查看方法参数 </summary>              <div class='content'>              <ul><li>-P: 可以显示进程 </li><li>-e: 使用线程数目<br>note： –gzip不可用！！</li></ul>              </div>            </details><p>参考：<br></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1] "></span><a class="reference-anchor" href="#referto_[1] ">[1] <div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href=" https://zhuanlan.zhihu.com/p/591140275"> sra转fastq笔记</a></div><hr><h2 id="质量控制"><a href="#质量控制" class="headerlink" title="质量控制"></a>质量控制</h2><h3 id="原始数据质量查看"><a href="#原始数据质量查看" class="headerlink" title="原始数据质量查看"></a>原始数据质量查看</h3><h4 id="fastqc"><a href="#fastqc" class="headerlink" title="fastqc"></a>fastqc</h4><p>一款快速多线程地对测序数据进行质量评估（Quality Control）的质控软件，将生成html报告和报告压缩文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastqc [-o output dir] [--(no)extract] [-f fastq|bam|sam] [-c contaminant file] seqfile1 .. seqfileN</span><br></pre></td></tr></table></figure><details class="folding-tag" yellow><summary> 查看方法参数 </summary>              <div class='content'>              <ul><li>-o: 输出目录</li><li>-noextract: 生成的报告默认会打包成1个压缩文件，使用这个参数是让程序不打包</li><li>-f: 强制输入文件格式，默认自动检测，有效输入bam,sam,bam_mapped,sam_mapped and fastq</li><li>-t: 线程数</li><li>-q: 安静运行模式</li></ul>              </div>            </details><h4 id="multiqc"><a href="#multiqc" class="headerlink" title="multiqc"></a>multiqc</h4><p>一种模块化工具，用于将多个样本的质量控制分析结果汇总到一份报告中，同样会生成html报告</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multiqc [file_dir] --ignore [ignore_file]</span><br></pre></td></tr></table></figure><details class="folding-tag" yellow><summary> 查看方法参数 </summary>              <div class='content'>              <ul><li></li><li>[ignore_file]:</li></ul>              </div>            </details><p>原始数据质量判断戳这儿</p><div class="reference-source"><span class="hidden-anchor" id="referfrom_"></span><a class="reference-anchor" href="#referto_"><div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href=" https://zhuanlan.zhihu.com/p/57628300"> fastqc报告查看</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_"></span><a class="reference-anchor" href="#referto_"><div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href=" https://www.jianshu.com/p/f83626fd1fa1"> multiqc报告查看</a></div><h3 id="质控清洗"><a href="#质控清洗" class="headerlink" title="质控清洗"></a>质控清洗</h3><h4 id="trim-galore"><a href="#trim-galore" class="headerlink" title="trim-galore"></a>trim-galore</h4><p>Trim Galore是对FastQC和Cutadapt的包装,适用于所有高通量测序，包括RRBS(Reduced Representation Bisulfite-Seq ), Illumina、Nextera和smallRNA测序平台的双端和单端数据，包括去除低质量碱基和3’ 末端的adapter以及长度控制等功能。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">trim_galore -j 4  -q 25  --phred33 --length 35 \</span><br><span class="line">    --stringency 3  --paired --gzip -o [output_path] [file1] [file2]</span><br></pre></td></tr></table></figure><details class="folding-tag" yellow><summary> 查看方法参数 </summary>              <div class='content'>              <ul><li>-j: 使用线程数, 注意假设已使用Python 3并安装了Pigz，那么内核设置为4，实际使用内核是15，因此，最高设为4.</li><li>-1：设定Phred quality score阈值，默认为Phred 20 切除质量得分低于设定值的序列</li><li>–phred33&#x2F;–phred64： 用于指定输入数据的质量得分编码方式，ASCII 33 是由 Illumina 1.8+ 和 Sanger 测序平台使用的，而 ASCII 64 是由 Illumina 1.3+ 和 Illumina 1.5+ 测序平台使用的，可以用FastQC检查类型。</li><li>–length: 设定输出reads长度阈值小于设定值会被抛弃，默认值20bp。</li><li>–stringency: </li><li>–paired：指定输入数据是配对端（paired-end）测序数据，如若是单端测序则不需此参数</li><li>–gzip：清洗后的数据zip打包</li><li>-o：输出路径</li><li>– trim-n: 移除read一端的reads</li><li>–fastqc：使用默认选项对结果文件进行fastqc分析</li></ul>              </div>            </details><hr><h1 id="上游数据比对、计数"><a href="#上游数据比对、计数" class="headerlink" title="上游数据比对、计数"></a>上游数据比对、计数</h1><h2 id="hisat2-featurecount"><a href="#hisat2-featurecount" class="headerlink" title="hisat2+featurecount"></a>hisat2+featurecount</h2><h3 id="获取比对文件"><a href="#获取比对文件" class="headerlink" title="获取比对文件"></a>获取比对文件</h3><p>HISAT2是一种用于比对RNA序列数据的工具，在使用之前需要先在<a href="https://daehwankimlab.github.io/hisat2/download/">获取索引文件</a></p><p>索引文件的主要作用是加速比对过程。如果没有索引，HISAT2 需要对每一个读取和参考基因组的每一个位置进行比较，这将需要大量的时间。有了索引，HISAT2 可以快速地找到可能的比对位置，大大减少了比对所需的时间。此外，索引文件还可以包含其他的信息，如剪接位点（splice sites）和转录起始位点（transcription start sites）。这些信息可以帮助HISAT2更准确地比对RNA序列数据。</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 学习📚 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
            <tag> 生信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>还没开始复现 这只是一个测试</title>
      <link href="/2024/05/11/read1/"/>
      <url>/2024/05/11/read1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 文献阅读📖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
            <tag> 建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>还没开始阅读 这只是一个测试</title>
      <link href="/2024/05/11/share1/"/>
      <url>/2024/05/11/share1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 文章复现👨‍💻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 蛋白质设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎光临Eddie的blog</title>
      <link href="/2024/05/10/welcome/"/>
      <url>/2024/05/10/welcome/</url>
      
        <content type="html"><![CDATA[<h1 id="Welcome-to-Eddie’s-blog"><a href="#Welcome-to-Eddie’s-blog" class="headerlink" title="Welcome to Eddie’s blog!"></a>Welcome to Eddie’s blog!</h1><p>本博客基于Hexo+Github搭建，采用butterfly主题样式。由于能力受限，做的很丑hhhh<br>这是我的第一篇博客，也可能没有第二篇<br>如果有第二篇的话，那就有吧hhh<br>希望有机会能在上面分享我的学习记录（仅代表个人的理解，可能希望对大家有帮助，也有可能误导大家笑死）</p><style>refer .a {    color: white;    font-size: 8px;    text-decoration: none;}refer a:hover {    color: blue;}</style><p>记录一下学习RNA-seq分析的过程，整体流程参考，可能会补充一些其他的资料：<br><refer><ul></p><li> <a href="https://zhuanlan.zhihu.com/p/518132262">RNA-seq入门实战（零）：RNA-seq流程前的准备——Linux与R的环境创建</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518134934">RNA-seq入门实战（一）：上游数据下载、格式转化和质控清洗</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518137593">RNA-seq入门实战（二）：上游数据的比对计数——Hisat2+ featureCounts 与 Salmon</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518140221">RNA-seq入门实战（三）：从featureCounts与Salmon输出文件获取counts矩阵</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518141288">RNA-seq入门实战（四）：差异分析前的准备——数据检查</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518142469">RNA-seq入门实战（五）：差异分析——DESeq2 edgeR limma的使用与比较</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518143539">RNA-seq入门实战（六）：GO、KEGG富集分析与enrichplot超全可视化攻略</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518144716">RNA-seq入门实战（七）：GSEA——基因集富集分析</a></li><li> <a href="https://zhuanlan.zhihu.com/p/518145829">RNA-seq入门实战（八）：GSVA——基因集变异分析</a></li><li> <a href="https://zhuanlan.zhihu.com/p/532037554">RNA-seq入门实战（九）：PPI蛋白互作网络构建（上）——STRING数据库的使用</a></li><li> <a href="https://zhuanlan.zhihu.com/p/532038640">RNA-seq入门实战（十）：PPI蛋白互作网络构建（下）——Cytoscape软件的使用</a></li><li> <a href="https://zhuanlan.zhihu.com/p/532039670">RNA-seq入门实战（十一）：WGCNA加权基因共表达网络分析——关联基因模块与表型</a></li></ul></refer>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
